// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using logTrip.Models;

namespace logTrip.Migrations
{
    [DbContext(typeof(TripContext))]
    partial class TripContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("logTrip.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accommodation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccommodationEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccommodationPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThingToDo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThingToDo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThingToDo3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            TripId = 1,
                            Accommodation = "Night starts hotel",
                            AccommodationEmail = "stars@booling.com",
                            AccommodationPhone = "501-388-0001",
                            Destination = "Paris",
                            EndDate = new DateTime(2021, 3, 22, 22, 6, 0, 24, DateTimeKind.Local).AddTicks(7260),
                            StartDate = new DateTime(2021, 3, 21, 22, 6, 0, 24, DateTimeKind.Local).AddTicks(7260),
                            ThingToDo1 = "Conference"
                        },
                        new
                        {
                            TripId = 2,
                            Accommodation = "Sunset hotel",
                            AccommodationEmail = "info@sunset.com",
                            AccommodationPhone = "801-846-2701",
                            Destination = "New York",
                            EndDate = new DateTime(2021, 4, 6, 22, 6, 0, 24, DateTimeKind.Local).AddTicks(7260),
                            StartDate = new DateTime(2021, 3, 31, 22, 6, 0, 24, DateTimeKind.Local).AddTicks(7260),
                            ThingToDo1 = "Go to central park",
                            ThingToDo2 = "Visit the world Trade Center's Liberty Park",
                            ThingToDo3 = "Grand Central Terminal"
                        },
                        new
                        {
                            TripId = 3,
                            Accommodation = "Holiday-in Hotel",
                            AccommodationEmail = "booking@holiday.com",
                            AccommodationPhone = "901-786-4325",
                            Destination = "Boston",
                            EndDate = new DateTime(2021, 4, 13, 22, 6, 0, 24, DateTimeKind.Local).AddTicks(7260),
                            StartDate = new DateTime(2021, 4, 10, 22, 6, 0, 24, DateTimeKind.Local).AddTicks(7260),
                            ThingToDo1 = "",
                            ThingToDo2 = "",
                            ThingToDo3 = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
